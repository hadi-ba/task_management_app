generator client {
  provider = "prisma-client-js"
}

generator prismaClassGenerator {
    provider = "prisma-class-generator"
    dryRun = "false"
    separateRelationFields = "true"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Board {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  columns   Column[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Column {
  id        Int      @id @default(autoincrement())
  name      String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   Int
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

   @@unique([boardId, name])
}

model Task {
  id          Int       @id @default(autoincrement())
  title        String
  description String
  column      Column    @relation(fields: [columnId], references: [id],  onDelete: Cascade)
  columnId    Int
  subTasks    SubTask[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model SubTask {
  id        Int      @id @default(autoincrement())
  title      String
  completed Boolean  @default(false)
  task      Task     @relation(fields: [taskId], references: [id],  onDelete: Cascade)
  taskId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
